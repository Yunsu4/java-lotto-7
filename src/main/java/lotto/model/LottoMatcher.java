package lotto.model;


import java.util.HashSet;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import java.util.Set;
import lotto.util.WinningDetails;

public class LottoMatcher {

    public static final int MAX_NON_RANK_NUMBER = 2;
    public static final int NUMBER_FOR_NO_WIN = 0;
    public static final int COUNT_FOR_BONUS_CHECK = 5;

    public void determineWinningDetails(List<Lotto> autoGeneratedLottos, Lotto winningLotto, Integer bonusNumber) {
        for (Lotto autoGeneratedLotto : autoGeneratedLottos) {
            int sameNumberCount = determineRank(autoGeneratedLotto, winningLotto);
            boolean matchBonus = (sameNumberCount == COUNT_FOR_BONUS_CHECK)
                    && hasSameNumber(autoGeneratedLotto, winningLotto, bonusNumber);
            WinningDetails.addMatchLottoCount(sameNumberCount, matchBonus);
        }
    }

    private int determineRank(Lotto autoGeneratedLotto, Lotto winningLotto) {
        int sameNumberCount = extractSameNumberCount(autoGeneratedLotto, winningLotto);
        if (sameNumberCount > MAX_NON_RANK_NUMBER) {
            return sameNumberCount;
        }
        return NUMBER_FOR_NO_WIN;
    }

    private int extractSameNumberCount(Lotto autoGeneratedLotto, Lotto winningLotto) {
        Set<Integer> winningNumbersSet = new HashSet<>(winningLotto.getLottoNumbers());

        long count = autoGeneratedLotto.getLottoNumbers().stream()
                .filter(winningNumbersSet::contains)
                .count();

        return (int) count;
    }

    private boolean hasSameNumber(Lotto autoGeneratedLotto, Lotto winningLotto, Integer bonusNumber) {
        Set<Integer> winningNumbersSet = new HashSet<>(winningLotto.getLottoNumbers());

        Optional<Integer> unmatchedWithWinningNumber = autoGeneratedLotto.getLottoNumbers().stream()
                .filter(lottoNumber -> !winningNumbersSet.contains(lottoNumber))
                .findFirst();

        return unmatchedWithWinningNumber.isPresent() && Objects.equals(unmatchedWithWinningNumber.get(), bonusNumber);
    }

}
